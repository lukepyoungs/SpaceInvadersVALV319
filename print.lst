


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 EXPORT           ConvertUDec
   13 00000000                 EXPORT           ConvertDistance
   14 00000000                 EXPORT           String
   15 00000000                 AREA             DATA, ALIGN=2
   16 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 String  SPACE            12          ; unsigned char Str
                                                            ing[10]
   17 0000000C                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000                 MACRO
   21 00000000                 UMOD             $Mod,$Divnd,$Divsr ;MOD,DIVIDEN
                                                            D,DIVISOR
   22 00000000                 UDIV             $Mod,$Divnd,$Divsr ;Mod = DIVID
                                                            END/DIVISOR
   23 00000000                 MUL              $Mod,$Mod,$Divsr ;Mod = DIVISOR
                                                            *(DIVIDEND/DIVISOR)
                                                            
   24 00000000                 SUB              $Mod,$Divnd,$Mod ;Mod = DIVIDEN
                                                            D-DIVISOR*(DIVIDEND
                                                            /DIVISOR)
   25 00000000                 MEND
   26 00000000         
   27 00000000         
   28 00000000         ;-----------------------ConvertUDec---------------------
                       --
   29 00000000         ; Convert a 32-bit number in unsigned decimal format
   30 00000000         ; Input: R0, 32-bit number to be transferred
   31 00000000         ; Output: none
   32 00000000         ; Lab 11 requirement is for at least one local variable 
                       on the stack with symbolic binding
   33 00000000         ; Converts a 32-bit number in unsigned decimal format
   34 00000000         ; Output: store the conversion in global variable String
                       [12]
   35 00000000         ; Fixed format 4 digits, one space after, null terminati
                       on
   36 00000000         ; Examples
   37 00000000         ;    4 to "   4 "  
   38 00000000         ;   31 to "  31 " 
   39 00000000         ;  102 to " 102 " 
   40 00000000         ; 2210 to "2210 "



ARM Macro Assembler    Page 2 


   41 00000000         ;10000 to "**** "  any value larger than 9999 converted 
                       to "**** "
   42 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   43 00000000         ConvertUDec
   44 00000000         ; copy your lab 11 solution here
   45 00000000 F242 7110       LDR              R1, =10000
   46 00000004 4288            CMP              R0, R1
   47 00000006 D24D            BHS              spec
   48 00000008         
   49 00000008 00000000 
                       first   EQU              0
   50 00000008 00000001 
                       sec     EQU              1
   51 00000008 00000002 
                       third   EQU              2
   52 00000008 00000003 
                       fourth  EQU              3
   53 00000008 00000004 
                       ascspace
                               EQU              4
   54 00000008 B082            SUB              SP, #8
   55 0000000A F04F 0200       MOV              R2, #0
   56 0000000E 4601            MOV              R1, R0
   57 00000010         checkTH
   58 00000010 F5B1 7F7A       CMP              R1, #1000
   59 00000014 D319            BLO              storTH      ; if r1 < 1000 then
                                                             will store counter
                                                             value
   60 00000016 F5A1 717A       SUB              R1, R1, #1000
   61 0000001A F102 0201       ADD              R2, #1
   62 0000001E E7F7            B                checkTH
   63 00000020         checkHO
   64 00000020 2964            CMP              R1, #100
   65 00000022 D318            BLO              storHO
   66 00000024 F1A1 0164       SUB              R1, R1, #100
   67 00000028 F102 0201       ADD              R2, #1
   68 0000002C E7F8            B                checkHO
   69 0000002E         checkTE
   70 0000002E 290A            CMP              R1, #10
   71 00000030 D318            BLO              storTE
   72 00000032 F1A1 010A       SUB              R1, R1, #10
   73 00000036 F102 0201       ADD              R2, #1
   74 0000003A E7F8            B                checkTE
   75 0000003C         checkON
   76 0000003C 2901            CMP              R1, #1
   77 0000003E D318            BLO              storON
   78 00000040 F1A1 0101       SUB              R1, R1, #1
   79 00000044 F102 0201       ADD              R2, #1
   80 00000048 E7F8            B                checkON
   81 0000004A         storTH
   82 0000004A F102 0230       ADD              R2, R2, #0x30
   83 0000004E 9200            STR              R2, [SP, #first]
   84 00000050 F04F 0200       MOV              R2, #0
   85 00000054 E7E4            B                checkHO
   86 00000056         storHO
   87 00000056 F102 0230       ADD              R2, R2, #0x30
   88 0000005A F8CD 2001       STR              R2, [SP, #sec]
   89 0000005E F04F 0200       MOV              R2, #0



ARM Macro Assembler    Page 3 


   90 00000062 E7E4            B                checkTE
   91 00000064         storTE
   92 00000064 F102 0230       ADD              R2, R2, #0x30
   93 00000068 F8CD 2002       STR              R2, [SP, #third]
   94 0000006C F04F 0200       MOV              R2, #0
   95 00000070 E7E4            B                checkON
   96 00000072         storON
   97 00000072 F102 0230       ADD              R2, R2, #0x30
   98 00000076 F8CD 2003       STR              R2, [SP, #fourth]
   99 0000007A         storSP
  100 0000007A F04F 0320       MOV              R3, #0x20   ; ascii for space
  101 0000007E 9301            STR              R3, [SP, #ascspace]
  102 00000080         ; LOAD FROM STACK TO ARRAY 
  103 00000080 4950            LDR              R1, =String
  104 00000082 F89D 3000       LDRB             R3, [SP, #first]
  105 00000086 700B            STRB             R3, [R1]
  106 00000088         
  107 00000088         
  108 00000088 F89D 3001       LDRB             R3, [SP, #sec]
  109 0000008C 704B            STRB             R3, [R1, #1]
  110 0000008E         
  111 0000008E         
  112 0000008E F89D 3002       LDRB             R3, [SP, #third]
  113 00000092 708B            STRB             R3, [R1, #2]
  114 00000094         
  115 00000094         
  116 00000094 F89D 3003       LDRB             R3, [SP, #fourth]
  117 00000098 70CB            STRB             R3, [R1, #3]
  118 0000009A         
  119 0000009A         
  120 0000009A F89D 3004       LDRB             R3, [SP, #ascspace]
  121 0000009E 710B            STRB             R3, [R1, #4]
  122 000000A0 B002            ADD              SP, SP, #8
  123 000000A2         
  124 000000A2 E013            B                donefr
  125 000000A4         
  126 000000A4         
  127 000000A4         spec
  128 000000A4 4947            LDR              R1, =String
  129 000000A6 F04F 032A       LDR              R3, =0x2A   ;ascii for *
  130 000000AA 700B            STRB             R3, [R1]
  131 000000AC F04F 032A       LDR              R3, =0x2A
  132 000000B0 F8C1 3001       STR              R3, [R1, #1] ; ascii for space 
                                                            x20
  133 000000B4 F04F 032A       LDR              R3, =0x2A   ;ascii for *
  134 000000B8 708B            STRB             R3, [R1, #2]
  135 000000BA F04F 032A       LDR              R3, =0x2A   ;ascii for *
  136 000000BE 70CB            STRB             R3, [R1, #3]
  137 000000C0 F04F 0320       MOV              R3, #0x20
  138 000000C4 710B            STRB             R3, [R1, #4]
  139 000000C6 F04F 0300       MOV              R3, #0
  140 000000CA 714B            STRB             R3, [R1, #5]
  141 000000CC         
  142 000000CC         donefr
  143 000000CC         
  144 000000CC 4770            BX               LR
  145 000000CE         ;* * * * * * * * End of ConvertUDec * * * * * * * *
  146 000000CE         
  147 000000CE         ; -----------------------ConvertDistance----------------



ARM Macro Assembler    Page 4 


                       -------
  148 000000CE         ; Converts a 32-bit distance into an ASCII string
  149 000000CE         ; Input: R0, 32-bit number to be converted (resolution 0
                       .001cm)
  150 000000CE         ; Output: store the conversion in global variable String
                       [12]
  151 000000CE         ; Fixed format 1 digit, point, 3 digits, space, units, n
                       ull termination
  152 000000CE         ; Examples
  153 000000CE         ;    4 to "0.004 cm"  
  154 000000CE         ;   31 to "0.031 cm" 
  155 000000CE         ;  102 to "0.102 cm" 
  156 000000CE         ; 2210 to "2.210 cm"
  157 000000CE         ;10000 to "*.*** cm"  any value larger than 9999 convert
                       ed to "*.*** cm"
  158 000000CE         ; Invariables: This function must not permanently modify
                        registers R4 to R11
  159 000000CE         ; Lab 11 requirement is for at least one local variable 
                       on the stack with symbolic binding
  160 000000CE         ConvertDistance
  161 000000CE         ; copy your lab 11 solution here
  162 000000CE F242 7110       LDR              R1, =10000
  163 000000D2 4288            CMP              R0, R1
  164 000000D4 D259            BHS              spec2
  165 000000D6 00000000 
                       fir     EQU              0
  166 000000D6 00000001 
                       per     EQU              1
  167 000000D6 00000002 
                       dec1    EQU              2
  168 000000D6 00000003 
                       dec10   EQU              3
  169 000000D6 00000004 
                       dec100  EQU              4
  170 000000D6 B084            SUB              SP, #16
  171 000000D8 F04F 0200       MOV              R2, #0
  172 000000DC 4601            MOV              R1, R0
  173 000000DE         checkfir
  174 000000DE F5B1 7F7A       CMP              R1, #1000
  175 000000E2 D319            BLO              storfir     ; if r1 < 1000 then
                                                             will store counter
                                                             value
  176 000000E4 F5A1 717A       SUB              R1, R1, #1000
  177 000000E8 F102 0201       ADD              R2, #1
  178 000000EC E7F7            B                checkfir
  179 000000EE         checkdec1
  180 000000EE 2964            CMP              R1, #100
  181 000000F0 D318            BLO              stordec1
  182 000000F2 F1A1 0164       SUB              R1, R1, #100
  183 000000F6 F102 0201       ADD              R2, #1
  184 000000FA E7F8            B                checkdec1
  185 000000FC         checkdec10
  186 000000FC 290A            CMP              R1, #10
  187 000000FE D31C            BLO              stordec10
  188 00000100 F1A1 010A       SUB              R1, R1, #10
  189 00000104 F102 0201       ADD              R2, #1
  190 00000108 E7F8            B                checkdec10
  191 0000010A         checkdec100
  192 0000010A 2901            CMP              R1, #1



ARM Macro Assembler    Page 5 


  193 0000010C D31C            BLO              stordec100
  194 0000010E F1A1 0101       SUB              R1, R1, #1
  195 00000112 F102 0201       ADD              R2, #1
  196 00000116 E7F8            B                checkdec100
  197 00000118         storfir
  198 00000118 F102 0230       ADD              R2, R2, #0x30
  199 0000011C 9200            STR              R2, [SP, #fir]
  200 0000011E F04F 0200       MOV              R2, #0
  201 00000122 E7E4            B                checkdec1
  202 00000124         stordec1                             ; and period before
                                                            
  203 00000124 F04F 032E       MOV              R3, #0x2E
  204 00000128 F88D 3001       STRB             R3, [SP, #per] ; ascii for .
  205 0000012C F102 0230       ADD              R2, R2, #0x30
  206 00000130 F8CD 2002       STR              R2, [SP, #dec1]
  207 00000134 F04F 0200       MOV              R2, #0
  208 00000138 E7E0            B                checkdec10
  209 0000013A         stordec10
  210 0000013A F102 0230       ADD              R2, R2, #0x30
  211 0000013E F8CD 2003       STR              R2, [SP, #dec10]
  212 00000142 F04F 0200       MOV              R2, #0
  213 00000146 E7E0            B                checkdec100
  214 00000148         stordec100
  215 00000148 F102 0230       ADD              R2, R2, #0x30
  216 0000014C 9201            STR              R2, [SP, #dec100]
  217 0000014E         
  218 0000014E         ; LOAD FROM ATCK TO ARRAY
  219 0000014E 491D            LDR              R1, =String
  220 00000150 F89D 3000       LDRB             R3, [SP, #fir]
  221 00000154 700B            STRB             R3, [R1]
  222 00000156         
  223 00000156         
  224 00000156 F89D 3001       LDRB             R3, [SP, #per]
  225 0000015A 704B            STRB             R3, [R1,#1]
  226 0000015C         
  227 0000015C         
  228 0000015C F89D 3002       LDRB             R3, [SP, #dec1]
  229 00000160 708B            STRB             R3, [R1,#2]
  230 00000162         
  231 00000162         
  232 00000162 F89D 3003       LDRB             R3, [SP, #dec10]
  233 00000166 70CB            STRB             R3, [R1,#3]
  234 00000168         
  235 00000168         
  236 00000168 F89D 3004       LDRB             R3, [SP, #dec100]
  237 0000016C 710B            STRB             R3, [R1,#4]
  238 0000016E         
  239 0000016E         
  240 0000016E F04F 0320       MOV              R3, #0x20   ; store space
  241 00000172 714B            STRB             R3, [R1,#5]
  242 00000174         
  243 00000174         
  244 00000174 F04F 0363       MOV              R3, #0x63
  245 00000178 718B            STRB             R3, [R1,#6] ; ascii for c
  246 0000017A         
  247 0000017A         
  248 0000017A F04F 036D       MOV              R3, #0x6D
  249 0000017E 71CB            STRB             R3, [R1,#7] ; ascii for m
  250 00000180         



ARM Macro Assembler    Page 6 


  251 00000180         
  252 00000180 F04F 0300       MOV              R3, #0
  253 00000184 720B            STRB             R3, [R1,#8] ; null character
  254 00000186         
  255 00000186         
  256 00000186 B004            ADD              SP, SP, #16
  257 00000188 E01B            B                donezo
  258 0000018A         spec2
  259 0000018A 4A0E            LDR              R2, =String
  260 0000018C F04F 032A       MOV              R3, #0x2A
  261 00000190 7013            STRB             R3, [R2]    ; ascii for *
  262 00000192         
  263 00000192 F04F 032E       MOV              R3, #0x2E
  264 00000196 7053            STRB             R3, [R2,#1] ; ascii for .
  265 00000198         
  266 00000198 F04F 032A       MOV              R3, #0x2A
  267 0000019C 7093            STRB             R3, [R2,#2] ; ascii for *
  268 0000019E         
  269 0000019E F04F 032A       MOV              R3, #0x2A
  270 000001A2 70D3            STRB             R3, [R2,#3] ; ascii for *
  271 000001A4         
  272 000001A4 F04F 032A       MOV              R3, #0x2A
  273 000001A8 7113            STRB             R3, [R2,#4] ; ascii for *
  274 000001AA         
  275 000001AA F04F 0320       MOV              R3, #0x20
  276 000001AE 7153            STRB             R3, [R2,#5] ; ascii for space
  277 000001B0         
  278 000001B0 F04F 0363       MOV              R3, #0x63
  279 000001B4 7193            STRB             R3, [R2,#6] ; ascii for c
  280 000001B6         
  281 000001B6 F04F 036D       MOV              R3, #0x6D
  282 000001BA 71D3            STRB             R3, [R2,#7] ; ascii for m
  283 000001BC         
  284 000001BC F04F 0300       MOV              R3, #0
  285 000001C0 7213            STRB             R3, [R2,#8] ; null character
  286 000001C2         
  287 000001C2         
  288 000001C2         
  289 000001C2         donezo
  290 000001C2 4770            BX               LR
  291 000001C4         
  292 000001C4                 ALIGN
  293 000001C4         ;* * * * * * * * End of ConvertDistance * * * * * * * *
  294 000001C4         
  295 000001C4                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  296 000001C4                 END                          ; end of file
              00000000 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__EVAL SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 15 in file Print.s
   Uses
      None
Comment: DATA unused
String 00000000

Symbol: String
   Definitions
      At line 16 in file Print.s
   Uses
      At line 14 in file Print.s
      At line 103 in file Print.s
      At line 128 in file Print.s
      At line 219 in file Print.s
      At line 259 in file Print.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
ConvertDistance 000000CE

Symbol: ConvertDistance
   Definitions
      At line 160 in file Print.s
   Uses
      At line 13 in file Print.s
Comment: ConvertDistance used once
ConvertUDec 00000000

Symbol: ConvertUDec
   Definitions
      At line 43 in file Print.s
   Uses
      At line 12 in file Print.s
Comment: ConvertUDec used once
checkHO 00000020

Symbol: checkHO
   Definitions
      At line 63 in file Print.s
   Uses
      At line 68 in file Print.s
      At line 85 in file Print.s

checkON 0000003C

Symbol: checkON
   Definitions
      At line 75 in file Print.s
   Uses
      At line 80 in file Print.s
      At line 95 in file Print.s

checkTE 0000002E

Symbol: checkTE
   Definitions
      At line 69 in file Print.s
   Uses
      At line 74 in file Print.s
      At line 90 in file Print.s

checkTH 00000010

Symbol: checkTH
   Definitions
      At line 57 in file Print.s
   Uses
      At line 62 in file Print.s
Comment: checkTH used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

checkdec1 000000EE

Symbol: checkdec1
   Definitions
      At line 179 in file Print.s
   Uses
      At line 184 in file Print.s
      At line 201 in file Print.s

checkdec10 000000FC

Symbol: checkdec10
   Definitions
      At line 185 in file Print.s
   Uses
      At line 190 in file Print.s
      At line 208 in file Print.s

checkdec100 0000010A

Symbol: checkdec100
   Definitions
      At line 191 in file Print.s
   Uses
      At line 196 in file Print.s
      At line 213 in file Print.s

checkfir 000000DE

Symbol: checkfir
   Definitions
      At line 173 in file Print.s
   Uses
      At line 178 in file Print.s
Comment: checkfir used once
donefr 000000CC

Symbol: donefr
   Definitions
      At line 142 in file Print.s
   Uses
      At line 124 in file Print.s
Comment: donefr used once
donezo 000001C2

Symbol: donezo
   Definitions
      At line 289 in file Print.s
   Uses
      At line 257 in file Print.s
Comment: donezo used once
spec 000000A4

Symbol: spec
   Definitions
      At line 127 in file Print.s
   Uses
      At line 47 in file Print.s
Comment: spec used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

spec2 0000018A

Symbol: spec2
   Definitions
      At line 258 in file Print.s
   Uses
      At line 164 in file Print.s
Comment: spec2 used once
storHO 00000056

Symbol: storHO
   Definitions
      At line 86 in file Print.s
   Uses
      At line 65 in file Print.s
Comment: storHO used once
storON 00000072

Symbol: storON
   Definitions
      At line 96 in file Print.s
   Uses
      At line 77 in file Print.s
Comment: storON used once
storSP 0000007A

Symbol: storSP
   Definitions
      At line 99 in file Print.s
   Uses
      None
Comment: storSP unused
storTE 00000064

Symbol: storTE
   Definitions
      At line 91 in file Print.s
   Uses
      At line 71 in file Print.s
Comment: storTE used once
storTH 0000004A

Symbol: storTH
   Definitions
      At line 81 in file Print.s
   Uses
      At line 59 in file Print.s
Comment: storTH used once
stordec1 00000124

Symbol: stordec1
   Definitions
      At line 202 in file Print.s
   Uses
      At line 181 in file Print.s
Comment: stordec1 used once
stordec10 0000013A

Symbol: stordec10



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 209 in file Print.s
   Uses
      At line 187 in file Print.s
Comment: stordec10 used once
stordec100 00000148

Symbol: stordec100
   Definitions
      At line 214 in file Print.s
   Uses
      At line 193 in file Print.s
Comment: stordec100 used once
storfir 00000118

Symbol: storfir
   Definitions
      At line 197 in file Print.s
   Uses
      At line 175 in file Print.s
Comment: storfir used once
24 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ascspace 00000004

Symbol: ascspace
   Definitions
      At line 53 in file Print.s
   Uses
      At line 101 in file Print.s
      At line 120 in file Print.s

dec1 00000002

Symbol: dec1
   Definitions
      At line 167 in file Print.s
   Uses
      At line 206 in file Print.s
      At line 228 in file Print.s

dec10 00000003

Symbol: dec10
   Definitions
      At line 168 in file Print.s
   Uses
      At line 211 in file Print.s
      At line 232 in file Print.s

dec100 00000004

Symbol: dec100
   Definitions
      At line 169 in file Print.s
   Uses
      At line 216 in file Print.s
      At line 236 in file Print.s

fir 00000000

Symbol: fir
   Definitions
      At line 165 in file Print.s
   Uses
      At line 199 in file Print.s
      At line 220 in file Print.s

first 00000000

Symbol: first
   Definitions
      At line 49 in file Print.s
   Uses
      At line 83 in file Print.s
      At line 104 in file Print.s

fourth 00000003

Symbol: fourth
   Definitions
      At line 52 in file Print.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 98 in file Print.s
      At line 116 in file Print.s

per 00000001

Symbol: per
   Definitions
      At line 166 in file Print.s
   Uses
      At line 204 in file Print.s
      At line 224 in file Print.s

sec 00000001

Symbol: sec
   Definitions
      At line 50 in file Print.s
   Uses
      At line 88 in file Print.s
      At line 108 in file Print.s

third 00000002

Symbol: third
   Definitions
      At line 51 in file Print.s
   Uses
      At line 93 in file Print.s
      At line 112 in file Print.s

10 symbols
369 symbols in table
